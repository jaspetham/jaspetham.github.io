(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{310:function(e,t,n){"use strict";n.r(t);var o=n(140),r=n(141),c=(n(30),n(82),n(19),n(38),n(81),n(333)),l=n(335),h={data:function(){return{}},methods:{},mounted:function(){var e=this.$route.path;new(function(){function t(e){Object(o.a)(this,t),this.scene=new c.f,this.container=e.dom,this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.renderer=new c.j,this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.width,this.height),this.renderer.setClearColor(15658734,1),this.renderer.physicallyCorrectLights=!0,this.renderer.outputEncoding=c.k,this.container.appendChild(this.renderer.domElement),this.isOpen=!1,this.camera=new c.d(70,window.innerWidth/window.innerHeight,.001,1e3),this.mobileMenu=document.querySelector(".menu-button"),this.menu=document.getElementById("menu"),this.camera.position.set(0,0,2),this.time=new c.a,this.elapsedTime=0,this.previousTime=0,this.isPlaying=!0,this.addObjects(),this.resize(),this.render(),this.setupResize(),this.animationStart(),this.checkCurrentUrl(),this.mouseEvents()}return Object(r.a)(t,[{key:"addHashToLocation",value:function(t){history.pushState({},null,e+"#"+encodeURIComponent(t))}},{key:"checkCurrentUrl",value:function(){var e=this,t=window.location.hash.replace("#","");"work"==t||"about"==t||"history"==t||"education"==t||"home"==t&&t.length>0?this.handleUrlChange(t):this.handleUrlChange("home"),document.querySelectorAll(".menu-item").forEach((function(t){var n=t.getAttribute("data-link");t.addEventListener("click",(function(){e.handleUrlChange(n)}))}))}},{key:"handleUrlChange",value:function(e){this.addHashToLocation(e),"home"==e?(document.getElementById("header").classList.remove("show"),document.querySelectorAll(".bar").forEach((function(e){e.classList.remove("hide")})),document.querySelectorAll(".page").forEach((function(t){"home"!=t.getAttribute("id")&&t.classList.remove("show"),setTimeout((function(){t.classList.add("hide"),document.getElementById(e).classList.remove("hide"),setTimeout((function(){document.getElementById(e).classList.add("show"),l.a.to(".footer-menu",{opacity:1,duration:.5,ease:"expo"})}),250)}),500)})),this.isOpen=!0):null!=e&&(document.querySelectorAll(".bar").forEach((function(e){e.classList.add("hide")})),document.getElementById("home").classList.remove("show"),document.getElementById("home").classList.add("hide"),document.getElementById("header").classList.add("show"),l.a.to(".footer-menu",{opacity:0,duration:.5,ease:"expo"}),document.querySelectorAll(".page").forEach((function(t){t.classList.remove("show"),setTimeout((function(){t.classList.add("hide"),document.getElementById(e).classList.remove("hide"),setTimeout((function(){document.getElementById(e).classList.add("show")}),100)}),1e3)})),this.isOpen=!1),this.isOpen?this.animationValue(0,.25):this.animationValue(1,2)}},{key:"animationStart",value:function(){var e=this;document.querySelectorAll(".menu-item").forEach((function(menu){menu.addEventListener("click",(function(){var t=menu.getAttribute("data-link");e.handleUrlChange(t),e.width<801&&(e.mobileMenu.classList.remove("active"),e.menu.classList.remove("show"))}))}))}},{key:"animationValue",value:function(a,b){l.a.to(this.material.uniforms.shape,{value:a,duration:1.5,ease:"power3.out"}),l.a.to(this.material.uniforms.timeMultiply,{value:b,duration:3,ease:"power3.in"})}},{key:"mouseEvents",value:function(){this.mouse=new c.h;var e=this;window.addEventListener("pointermove",(function(t){e.mouse.x=t.clientX/window.innerWidth*2-1,e.mouse.y=-t.clientY/window.innerHeight*2+1,e.material.uniforms.mouse.value=e.mouse}),!1)}},{key:"settings",value:function(){this.settings={progress:0};var e=n(331);this.gui=new e.GUI,this.gui.add(this.material.uniforms.shape,"value",0,1,.01)}},{key:"setupResize",value:function(){window.addEventListener("resize",this.resize.bind(this))}},{key:"resize",value:function(){var e,t,n=this;this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.renderer.setSize(this.width,this.height),this.camera.aspect=this.width/this.height,this.imageAspect=1,this.height/this.width>this.imageAspect?(e=this.width/this.height*this.imageAspect,t=1):(e=1,t=this.height/this.width/this.imageAspect),this.width>801?this.material.uniforms.cameraZPos.value=3:(this.material.uniforms.cameraZPos.value=5,this.mobileMenu.addEventListener("click",(function(){n.mobileMenu.classList.toggle("active"),n.menu.classList.toggle("show")}))),this.material.uniforms.resolution.value.x=this.width,this.material.uniforms.resolution.value.y=this.height,this.material.uniforms.resolution.value.z=e,this.material.uniforms.resolution.value.w=t;var o=this.camera.position.z;this.camera.fov=180/Math.PI*2*Math.atan(1/(2*o)),this.width/this.height>1?this.plane.scale.x=this.camera.aspect:this.plane.scale.y=1/this.camera.aspect,this.camera.updateProjectionMatrix()}},{key:"addObjects",value:function(){this.material=new c.g({extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:c.b,uniforms:{time:{value:0},mouse:{value:new c.h(0,0)},shape:{value:0},timeMultiply:{value:.25},cameraZPos:{value:3},resolution:{value:new c.i},uvRate1:{value:new c.h(1,1)}},vertexShader:"uniform float time;\r\nvarying vec2 vUv;\r\nvarying vec3 vPosition;\r\nuniform vec2 pixels;\r\nfloat PI=3.141592653589793238;\r\nvoid main(){\r\n    vUv=uv;\r\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\r\n}",fragmentShader:"uniform float time;\nuniform float progress;\nuniform float timeMultiply;\nuniform float cameraZPos;\n\nuniform sampler2D texture1;\nuniform vec4 resolution;\nuniform vec2 mouse;\nuniform float shape;\n\nvarying vec2 vUv;\nvarying vec3 vPosition;\nfloat PI=3.141592653589793238;\n\nmat4 rotationMatrix(vec3 axis,float angle){\n  axis=normalize(axis);\n  float s=sin(angle);\n  float c=cos(angle);\n  float oc=1.-c;\n\n  return mat4(oc*axis.x*axis.x+c,oc*axis.x*axis.y-axis.z*s,oc*axis.z*axis.x+axis.y*s,0.,\n    oc*axis.x*axis.y+axis.z*s,oc*axis.y*axis.y+c,oc*axis.y*axis.z-axis.x*s,0.,\n    oc*axis.z*axis.x-axis.y*s,oc*axis.y*axis.z+axis.x*s,oc*axis.z*axis.z+c,0.,\n  0.,0.,0.,1.);\n}\n\nvec3 rotate(vec3 v,vec3 axis,float angle){\n  mat4 m=rotationMatrix(axis,angle);\n  return(m*vec4(v,1.)).xyz;\n}\nfloat sphere(vec3 p){\n  return length(p) - 0.5;\n}\nfloat sdCutHollowSphere(vec3 p,float r,float h,float t)\n{\n  // sampling independent computations (only depend on shape)\n  float w=sqrt(r*r-h*h);\n\n  // sampling dependant computations\n  vec2 q=vec2(length(p.xz),p.y);\n  return((h*q.x<w*q.y)?length(q-vec2(w,h)):\n  abs(length(q)-r))-t;\n}\n\nfloat sdSolidAngle(vec3 p,vec2 c,float ra)\n{\n  vec2 q=vec2(length(p.xz),p.y);\n  float l=length(q)-ra;\n  float m=length(q-c*clamp(dot(q,c),0.,ra));\n  return max(l,m*sign(c.y*q.x-c.x*q.y));\n}\n\nfloat SineCrazy(vec3 p){\n  return 1. - (sin(p.x) + sin(p.y) + sin(p.z)) / 3.;\n}\n\nfloat scene(vec3 p){\n  vec3 p1 = rotate(p, vec3(1.,1.,1.), time * 0.25);\n  float scale = 20. + 15. * (sin(time / 2.) * timeMultiply);\n  return max(\n    mix(sphere(p1),sdCutHollowSphere(p1,.71,.71,.71),shape),\n    (1.-SineCrazy(p1*scale))/scale\n  );\n}\n\nvec3 getNormal(vec3 p){\n  vec2 o = vec2(0.001, 0.);\n  return normalize(\n    vec3(\n      scene(p + o.xyy) - scene(p - o.xyy),\n      scene(p + o.yxy) - scene(p - o.yxy),\n      scene(p + o.yyx) - scene(p - o.yyx)\n    )\n  );\n}\n\nvec3 GetColor(float amount){\n  vec3 col = 0.5 + 0.5 * cos(6.28319 * (vec3(0.2, 0., 0.) + amount * vec3(1.,1.,.5)));\n  return col * amount;\n}\nvec3 GetColorAmount(vec3 p){\n  float amount = clamp( (1.5 - length(p))/1.,0., 1.);\n  vec3 col = 0.5 + 0.5 * cos(6.28319 * (vec3(0.5451, 0.651, 0.7922) + amount * vec3(0.0745, 0.2118, 0.5059)));\n  // vec3 col=.5+.5*cos(6.28319*(vec3(0.0431, 0.4667, 0.9529)+amount*vec3(0.7608, 0.3843, 0.1333)));\n\n  return col * amount;\n}\n\nvoid main(){\n  vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\n\n  vec2 p = newUV - vec2(.5);\n\n  p.x -= mouse.x * 0.025;\n  p.y -= mouse.y * 0.025;\n\n\n  vec3 camPos = vec3(0.,0.,cameraZPos + (1. * sin(time* 0.5)* 0.25));\n\n  vec3 ray = normalize(vec3(p, -1.));\n\n  vec3 rayPos = camPos;\n\n  float curDist = 0.;\n  float rayLen = 0.;\n  vec3 light = vec3(-1.,1.,1.);\n\n  vec3 color = vec3(0.0235, 0.0235, 0.0275);\n\n  for(int i=0; i<=64; i++){\n    curDist = scene(rayPos);\n    rayLen += 0.6 * curDist;\n    rayPos = camPos + ray * rayLen;\n\n    if(abs(curDist) < 0.001){\n      vec3 n = getNormal(rayPos);\n\n      float diff = dot(n,light);\n\n      // color = GetColor(diff);\n      // color = GetColor(2. * length(rayPos));\n      break;\n    }\n\n    color += 0.01 * GetColorAmount(rayPos);\n  }\n\n  gl_FragColor=vec4(color,1.);\n  gl_FragColor.r -= abs(mouse.x * 0.2) * 0.25;\n  gl_FragColor.g -= abs(mouse.y * 0.2) * 0.25;\n}\n"}),this.geometry=new c.e(1,1,1,1),this.plane=new c.c(this.geometry,this.material),this.scene.add(this.plane)}},{key:"stop",value:function(){this.isPlaying=!1}},{key:"play",value:function(){this.isPlaying||(this.render(),this.isPlaying=!0)}},{key:"render",value:function(){this.isPlaying&&(this.elapsedTime=this.time.getElapsedTime(),this.material.uniforms.time.value=this.elapsedTime,requestAnimationFrame(this.render.bind(this)),this.renderer.render(this.scene,this.camera))}}]),t}())({dom:document.getElementById("container")})}},m=n(43),component=Object(m.a)(h,(function(){return(0,this._self._c)("div",{attrs:{id:"container"}})}),[],!1,null,"d766ed32",null);t.default=component.exports}}]);